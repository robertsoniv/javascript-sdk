/**
 * OrderCloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrderCloud);
  }
}(this, function(expect, OrderCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrderCloud.CategoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CategoryApi', function() {
    describe('catalogsCatalogIDCategoriesAssignmentsGet', function() {
      it('should call catalogsCatalogIDCategoriesAssignmentsGet successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesAssignmentsGet
        //instance.catalogsCatalogIDCategoriesAssignmentsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesAssignmentsPost', function() {
      it('should call catalogsCatalogIDCategoriesAssignmentsPost successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesAssignmentsPost
        //instance.catalogsCatalogIDCategoriesAssignmentsPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDAssignmentsDelete', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDAssignmentsDelete successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDAssignmentsDelete
        //instance.catalogsCatalogIDCategoriesCategoryIDAssignmentsDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDDelete', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDDelete successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDDelete
        //instance.catalogsCatalogIDCategoriesCategoryIDDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDGet', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDGet successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDGet
        //instance.catalogsCatalogIDCategoriesCategoryIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDPatch', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDPatch successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDPatch
        //instance.catalogsCatalogIDCategoriesCategoryIDPatch(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDProductassignmentsProductIDDelete', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDProductassignmentsProductIDDelete successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDProductassignmentsProductIDDelete
        //instance.catalogsCatalogIDCategoriesCategoryIDProductassignmentsProductIDDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesCategoryIDPut', function() {
      it('should call catalogsCatalogIDCategoriesCategoryIDPut successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesCategoryIDPut
        //instance.catalogsCatalogIDCategoriesCategoryIDPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesGet', function() {
      it('should call catalogsCatalogIDCategoriesGet successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesGet
        //instance.catalogsCatalogIDCategoriesGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesPost', function() {
      it('should call catalogsCatalogIDCategoriesPost successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesPost
        //instance.catalogsCatalogIDCategoriesPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesProductassignmentsGet', function() {
      it('should call catalogsCatalogIDCategoriesProductassignmentsGet successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesProductassignmentsGet
        //instance.catalogsCatalogIDCategoriesProductassignmentsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('catalogsCatalogIDCategoriesProductassignmentsPost', function() {
      it('should call catalogsCatalogIDCategoriesProductassignmentsPost successfully', function(done) {
        //uncomment below and update the code to test catalogsCatalogIDCategoriesProductassignmentsPost
        //instance.catalogsCatalogIDCategoriesProductassignmentsPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
