/**
 * OrderCloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrderCloud);
  }
}(this, function(expect, OrderCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrderCloud.MeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MeApi', function() {
    describe('meAddressesAddressIDDelete', function() {
      it('should call meAddressesAddressIDDelete successfully', function(done) {
        //uncomment below and update the code to test meAddressesAddressIDDelete
        //instance.meAddressesAddressIDDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meAddressesAddressIDGet', function() {
      it('should call meAddressesAddressIDGet successfully', function(done) {
        //uncomment below and update the code to test meAddressesAddressIDGet
        //instance.meAddressesAddressIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meAddressesAddressIDPatch', function() {
      it('should call meAddressesAddressIDPatch successfully', function(done) {
        //uncomment below and update the code to test meAddressesAddressIDPatch
        //instance.meAddressesAddressIDPatch(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meAddressesAddressIDPut', function() {
      it('should call meAddressesAddressIDPut successfully', function(done) {
        //uncomment below and update the code to test meAddressesAddressIDPut
        //instance.meAddressesAddressIDPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meAddressesGet', function() {
      it('should call meAddressesGet successfully', function(done) {
        //uncomment below and update the code to test meAddressesGet
        //instance.meAddressesGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meAddressesPost', function() {
      it('should call meAddressesPost successfully', function(done) {
        //uncomment below and update the code to test meAddressesPost
        //instance.meAddressesPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCategoriesGet', function() {
      it('should call meCategoriesGet successfully', function(done) {
        //uncomment below and update the code to test meCategoriesGet
        //instance.meCategoriesGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCostcentersGet', function() {
      it('should call meCostcentersGet successfully', function(done) {
        //uncomment below and update the code to test meCostcentersGet
        //instance.meCostcentersGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsCreditcardIDDelete', function() {
      it('should call meCreditcardsCreditcardIDDelete successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsCreditcardIDDelete
        //instance.meCreditcardsCreditcardIDDelete(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsCreditcardIDGet', function() {
      it('should call meCreditcardsCreditcardIDGet successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsCreditcardIDGet
        //instance.meCreditcardsCreditcardIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsCreditcardIDPatch', function() {
      it('should call meCreditcardsCreditcardIDPatch successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsCreditcardIDPatch
        //instance.meCreditcardsCreditcardIDPatch(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsCreditcardIDPut', function() {
      it('should call meCreditcardsCreditcardIDPut successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsCreditcardIDPut
        //instance.meCreditcardsCreditcardIDPut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsGet', function() {
      it('should call meCreditcardsGet successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsGet
        //instance.meCreditcardsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meCreditcardsPost', function() {
      it('should call meCreditcardsPost successfully', function(done) {
        //uncomment below and update the code to test meCreditcardsPost
        //instance.meCreditcardsPost(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meGet', function() {
      it('should call meGet successfully', function(done) {
        //uncomment below and update the code to test meGet
        //instance.meGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meOrdersIncomingGet', function() {
      it('should call meOrdersIncomingGet successfully', function(done) {
        //uncomment below and update the code to test meOrdersIncomingGet
        //instance.meOrdersIncomingGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meOrdersOrderIDGet', function() {
      it('should call meOrdersOrderIDGet successfully', function(done) {
        //uncomment below and update the code to test meOrdersOrderIDGet
        //instance.meOrdersOrderIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meOrdersOutgoingGet', function() {
      it('should call meOrdersOutgoingGet successfully', function(done) {
        //uncomment below and update the code to test meOrdersOutgoingGet
        //instance.meOrdersOutgoingGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mePatch', function() {
      it('should call mePatch successfully', function(done) {
        //uncomment below and update the code to test mePatch
        //instance.mePatch(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meProductsGet', function() {
      it('should call meProductsGet successfully', function(done) {
        //uncomment below and update the code to test meProductsGet
        //instance.meProductsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meProductsProductIDGet', function() {
      it('should call meProductsProductIDGet successfully', function(done) {
        //uncomment below and update the code to test meProductsProductIDGet
        //instance.meProductsProductIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meProductsProductIDSpecsGet', function() {
      it('should call meProductsProductIDSpecsGet successfully', function(done) {
        //uncomment below and update the code to test meProductsProductIDSpecsGet
        //instance.meProductsProductIDSpecsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meProductsProductIDSpecsSpecIDGet', function() {
      it('should call meProductsProductIDSpecsSpecIDGet successfully', function(done) {
        //uncomment below and update the code to test meProductsProductIDSpecsSpecIDGet
        //instance.meProductsProductIDSpecsSpecIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mePromotionsGet', function() {
      it('should call mePromotionsGet successfully', function(done) {
        //uncomment below and update the code to test mePromotionsGet
        //instance.mePromotionsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mePromotionsPromotionIDGet', function() {
      it('should call mePromotionsPromotionIDGet successfully', function(done) {
        //uncomment below and update the code to test mePromotionsPromotionIDGet
        //instance.mePromotionsPromotionIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mePut', function() {
      it('should call mePut successfully', function(done) {
        //uncomment below and update the code to test mePut
        //instance.mePut(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meSpendingAccountsGet', function() {
      it('should call meSpendingAccountsGet successfully', function(done) {
        //uncomment below and update the code to test meSpendingAccountsGet
        //instance.meSpendingAccountsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meSpendingaccountsSpendingAccountIDGet', function() {
      it('should call meSpendingaccountsSpendingAccountIDGet successfully', function(done) {
        //uncomment below and update the code to test meSpendingaccountsSpendingAccountIDGet
        //instance.meSpendingaccountsSpendingAccountIDGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('meUsergroupsGet', function() {
      it('should call meUsergroupsGet successfully', function(done) {
        //uncomment below and update the code to test meUsergroupsGet
        //instance.meUsergroupsGet(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
