/**
 * OrderCloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrderCloud);
  }
}(this, function(expect, OrderCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrderCloud.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be.a(OrderCloud.Order);
    });

    it('should have the property ID (base name: "ID")', function() {
      // uncomment below and update the code to test the property ID
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property fromUserID (base name: "FromUserID")', function() {
      // uncomment below and update the code to test the property fromUserID
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property fromUserFirstName (base name: "FromUserFirstName")', function() {
      // uncomment below and update the code to test the property fromUserFirstName
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property fromUserLastName (base name: "FromUserLastName")', function() {
      // uncomment below and update the code to test the property fromUserLastName
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property billingAddressID (base name: "BillingAddressID")', function() {
      // uncomment below and update the code to test the property billingAddressID
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "BillingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddressID (base name: "ShippingAddressID")', function() {
      // uncomment below and update the code to test the property shippingAddressID
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "Comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property lineItemCount (base name: "LineItemCount")', function() {
      // uncomment below and update the code to test the property lineItemCount
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "DateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateSubmitted (base name: "DateSubmitted")', function() {
      // uncomment below and update the code to test the property dateSubmitted
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateApproved (base name: "DateApproved")', function() {
      // uncomment below and update the code to test the property dateApproved
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateDeclined (base name: "DateDeclined")', function() {
      // uncomment below and update the code to test the property dateDeclined
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateCanceled (base name: "DateCanceled")', function() {
      // uncomment below and update the code to test the property dateCanceled
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property dateCompleted (base name: "DateCompleted")', function() {
      // uncomment below and update the code to test the property dateCompleted
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property subtotal (base name: "Subtotal")', function() {
      // uncomment below and update the code to test the property subtotal
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingCost (base name: "ShippingCost")', function() {
      // uncomment below and update the code to test the property shippingCost
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxCost (base name: "TaxCost")', function() {
      // uncomment below and update the code to test the property taxCost
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property promotionDiscount (base name: "PromotionDiscount")', function() {
      // uncomment below and update the code to test the property promotionDiscount
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "Total")', function() {
      // uncomment below and update the code to test the property total
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property isSubmitted (base name: "IsSubmitted")', function() {
      // uncomment below and update the code to test the property isSubmitted
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

    it('should have the property xp (base name: "xp")', function() {
      // uncomment below and update the code to test the property xp
      //var instane = new OrderCloud.Order();
      //expect(instance).to.be();
    });

  });

}));
